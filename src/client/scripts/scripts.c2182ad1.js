"use strict";angular.module("djangoItunesStaticsAppInternal",[]),angular.module("djangoItunesStaticsApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngMaterial","djangoItunesStaticsAppInternal"]).config(["$httpProvider",function(a){a.defaults.xsrfCookieName="csrftoken",a.defaults.xsrfHeaderName="X-CSRFToken"}]).config(["$mdThemingProvider",function(a){a.theme("default").primaryPalette("blue")}]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/add.html",controller:"AddCtrl as addCtrl"}).when("/albums",{templateUrl:"views/artists.html",controller:"ArtistsCtrl as artistsCtrl"}).otherwise({redirectTo:"/"})}]);var djangoItunesStaticsApp;!function(a){var b=function(){function a(a,b){this.iTunesApi=a,this.$mdToast=b}return a.$inject=["iTunesApi","$mdToast"],a.prototype.submit=function(){var a=this;this.loading=!0,this.iTunesApi.addArtist(this.artist).then(function(b){var c=b.success?"All albums added":"Artist not found";a.showToast(c)})["catch"](function(){a.showToast("Something went wrong, try again")})["finally"](function(){a.loading=!1})},a.prototype.showToast=function(a){this.$mdToast.show(this.$mdToast.simple().textContent(a).hideDelay(3e3))},a}();a.AddCtrl=b}(djangoItunesStaticsApp||(djangoItunesStaticsApp={})),angular.module("djangoItunesStaticsApp").controller("AddCtrl",djangoItunesStaticsApp.AddCtrl);var djangoItunesStaticsApp;!function(a){var b=function(){function a(a){var b=this;this.iTunesApi=a,this.artists=[],this.artistAlbums=[],a.fetchArtists().then(function(a){angular.copy(a,b.artists),a.length>0&&b.select(b.artists[0].id)})}return a.$inject=["iTunesApi"],a.prototype.select=function(a){var b=this;this.iTunesApi.fetchArtistAlbums(a).then(function(a){angular.copy(a,b.artistAlbums)})},a}();a.ArtistsCtrl=b;var c=function(){function a(){}return a}();a.Artist=c;var d=function(){function a(){}return a}();a.Album=d}(djangoItunesStaticsApp||(djangoItunesStaticsApp={})),angular.module("djangoItunesStaticsApp").controller("ArtistsCtrl",djangoItunesStaticsApp.ArtistsCtrl);var djangoItunesStaticsApp;!function(a){var b=function(){function a(a){this.$http=a}return a.$inject=["$http"],a.prototype.addArtist=function(a){return this.$http.post("/api/v1/artists/",{name:a}).then(function(a){return a.data})},a.prototype.fetchArtists=function(){return this.$http.get("/api/v1/artists/").then(function(a){return a.data})},a.prototype.fetchArtistAlbums=function(a){return this.$http.get("/api/v1/artists/"+a+"/albums/").then(function(a){return a.data})},a}();a.ITunesApi=b}(djangoItunesStaticsApp||(djangoItunesStaticsApp={})),angular.module("djangoItunesStaticsAppInternal").service("iTunesApi",djangoItunesStaticsApp.ITunesApi),angular.module("djangoItunesStaticsApp").run(["$templateCache",function(a){a.put("views/add.html",'<div class="page-container"> <form ng-submit="addCtrl.submit()" class="add-form"> <div class="form-wrapper"> <md-input-container class="add-input"> <label>Artist Name</label> <input type="text" ng-model="addCtrl.artist" required> </md-input-container> <md-button class="md-raised md-primary add-btn" type="submit">Add</md-button> <md-progress-linear ng-if="addCtrl.loading" md-mode="indeterminate"></md-progress-linear> </div> </form> </div>'),a.put("views/artists.html",'<div class="artists-page"> <section class="left-nav"> <ul class="list"> <li ng-repeat="artist in artistsCtrl.artists track by $index" ng-click="artistsCtrl.select(artist.id)"> {{artist.name}} </li> </ul> </section> <section class="right-content"> <ul class="list album-list"> <li ng-repeat="album in artistsCtrl.artistAlbums track by $index" class="album"> <md-card> <md-card-title> <md-card-title-text> <span class="md-headline">{{album.name}}</span> <span class="md-subhead">Extra Large</span> </md-card-title-text> </md-card-title> <md-card-content layout="row" layout-align="space-between"> <div class="md-media-md card-media"> <img ng-src="{{album.imageUrl}}"> </div> </md-card-content> </md-card> </li> </ul> </section> </div>')}]);